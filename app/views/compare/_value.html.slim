- if sub_property.type < SDL::Types::SDLSimpleType
  tr
    th.col-md-2= sub_property.documentation
    - services.each do |service|
      td[class="col-md-#{12/services_count}"]
        - unless service.send(property.name).try(sub_property.name).blank?
          == render_value(service.send(property.name).send(sub_property.name))
- elsif sub_property.type.multi_property? || sub_property.type.single_property?
  - if sub_property.multi?
    tr
      th.col-md-2= sub_property.documentation
      - services.each do |service|
        td[class="col-md-#{12/services_count}"]
          - unless service.try(property.name).try(sub_property.name).blank?
            - [service.send(property.name).send(sub_property.name)].flatten.each do |v|
              - if (v.class < SDL::Types::SDLSimpleType) || v.class.multi_property?
                == render_value(v)
              - else
                li== render_value(v)
  - else
    tr
      th.table-column-highlight[colspan="#{services_count}"]= sub_property.documentation
    - value.property_values.each do |p, v|
      - if p.multi?
        tr
          th.col-md-2= p.documentation
          - services.each do |service|
            td[class="col-md-#{12/services_count}"]
              - unless service.try( property.name ).try(sub_property.name).try(p.name).blank?
                - [service.send(property.name).send(sub_property.name).send(p.name)].flatten.each do |va|
                  - if (va.class < SDL::Types::SDLSimpleType) || va.class.multi_property?
                    == render_value(va)
                  - else
                    li== render_value(va)
      - else
        tr
          th.col-md-2= p.documentation
          - services.each do |service|
            td[class="col-md-#{12/services_count}"]
              - unless service.try( property.name ).try(sub_property.name).try(p.name).blank?
                == render_value(service.send(property.name).send(sub_property.name).send(p.name))
- elsif sub_property.multi?
  tr
    th.col-md-2= sub_property.documentation
    - services.each do |service|
      td[class="col-md-#{12/services_count}"]
        - unless service.try( property.name ).try(sub_property.name).blank?
          - [service.send(property.name).send(sub_property.name)].flatten.each do |v|
            - if (v.class < SDL::Types::SDLSimpleType) || v.class.multi_property?
              == render_value(v)
            - else
              li== render_value(v)
- elsif sub_property.single?
  tr
    th.col-md-2= sub_property.documentation
    - services.each do |service|
      td[class="col-md-#{12/services_count}"]
        - unless service.try( property.name ).try(sub_property.name).blank?
          == render_value(service.send(property.name).send(sub_property.name))
- else
  tr
    td[colspan="#{services_count}"] unknown